#!/usr/bin/python
# -*- coding: UTF-8 -*-
"""
@author:HP
@file:流程.py
@time:2022/04/19
"""
import cv2
from watchdog.events import *
import cv2
import numpy as np

def xiaochuhongzhang(img_imread,img_output):
    data_base_dir = img_imread # 输入文件夹的路径
    outfile_dir = img_output # 截取红章文件夹放置路径
    # quhongzhang_dir = 'D:/aiImg/quchuzhang' #去除红章文件夹放置路径
    processed_number = 0  # 统计处理图片的数量
    for file in os.listdir(data_base_dir):  # 遍历目标文件夹图片
        read_img_name = data_base_dir + '//' + file.strip()  # 取图片完整路径
        image = cv2.imread(read_img_name)  # 读入图片
        while (1):
            red_channel = image[:, :, 2]
            green_channel = image[:, :, 1]
            blue_channel = image[:, :, 0]
            processed_number += 1
            # 或者使用cv2自带的函数,但是耗时比较多
            # channels = cv2.split(image)

            gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
            _, binary = cv2.threshold(gray, 127, 255, cv2.THRESH_BINARY)

            ret, red_binary = cv2.threshold(red_channel, 160, 255, cv2.THRESH_BINARY)

            # 合并各个通道的函数
            merge = cv2.merge([blue_channel, green_channel, red_channel])
            out_img_name = outfile_dir + '//' + file.strip()
            cv2.imwrite(out_img_name, red_channel)
            print("输出的照片数量为:", processed_number)
            # cv2.imshow("binary", binary)
            cv2.waitKey(0)
            cv2.destroyAllWindows()
            break
def biaojiegou(img_imread,img_output):
    data_base_dir = img_imread  # 输入文件夹的路径
    outfile_dir = img_output  # 截取红章文件夹放置路径
    processed_number = 0  # 统计处理图片的数量
    for file in os.listdir(data_base_dir):  # 遍历目标文件夹图片
        read_img_name = data_base_dir + '//' + file.strip()  # 取图片完整路径
        while(1):
            src_img = cv2.imread(read_img_name)
            src_img0 = cv2.cvtColor(src_img, cv2.COLOR_BGR2GRAY)
            src_img0 = cv2.GaussianBlur(src_img0,(3,3),0)
            src_img1 = cv2.bitwise_not(src_img0)
            AdaptiveThreshold = cv2.adaptiveThreshold(src_img1, 255, cv2.ADAPTIVE_THRESH_GAUSSIAN_C, cv2.THRESH_BINARY, 15, -2)

            horizontal = AdaptiveThreshold.copy()
            vertical = AdaptiveThreshold.copy()
            scale = 20

            horizontalSize = int(horizontal.shape[1]/scale)
            horizontalStructure = cv2.getStructuringElement(cv2.MORPH_RECT, (horizontalSize, 1))
            horizontal = cv2.erode(horizontal, horizontalStructure)
            horizontal = cv2.dilate(horizontal, horizontalStructure)
            # cv2.imshow("horizontal", horizontal)
            # cv2.waitKey(0)

            verticalsize = int(vertical.shape[1]/scale)
            verticalStructure = cv2.getStructuringElement(cv2.MORPH_RECT, (1, verticalsize))
            vertical = cv2.erode(vertical, verticalStructure, (-1, -1))
            vertical = cv2.dilate(vertical, verticalStructure, (-1, -1))
            # cv2.imshow("verticalsize", vertical)
            # cv2.waitKey(0)
            processed_number +=1
            mask = horizontal + vertical
            out_img_name = outfile_dir + '//' + file.strip()
            # cv2.imshow("mask", mask)
            cv2.imwrite(out_img_name,mask)
            print("输出的照片数量为:", processed_number)
            cv2.waitKey(0)
            cv2.destroyAllWindows()
            break
def tiqu(img_imread,img_output):
    np.set_printoptions(threshold=np.inf)
    data_base_dir = img_imread  # 输入文件夹的路径
    outfile_dir = img_output  # 截取红章文件夹放置路径
    processed_number = 0  # 统计处理图片的数量
    for file in os.listdir(data_base_dir):  # 遍历目标文件夹图片
        read_img_name = data_base_dir + '//' + file.strip()  # 取图片完整路径
        while(1):
            image = cv2.imread(read_img_name)
            hue_image = cv2.cvtColor(image, cv2.COLOR_BGR2HSV)
            low_range = np.array([150, 103, 170])
            high_range = np.array([190, 255, 255])
            th = cv2.inRange(hue_image, low_range, high_range)
            index1 = th == 255
            processed_number +=1
            out_img_name = outfile_dir + '//' + file.strip()
            img = np.zeros(image.shape, np.uint8)
            img[:, :] = (255,255,255)
            img[index1] = image[index1]#(0,0,255)
            cv2.imwrite(out_img_name, img)
            cv2.waitKey(0)
            print("输出的照片数量为:", processed_number)
            break
tiqu('img_imread','img_output')
xiaochuhongzhang('img_imread','img_output')
biaojiegou('img_imread','img_output')

# def tiqu(img_imread,img_output):
#     # ---------------------提取印章 - --------------------
#     data_base_dir = img_imread  # 输入文件夹的路径
#     outfile_dir = img_output  # 截取红章文件夹放置路径
#
#     np.set_printoptions(threshold=np.inf)
#     image = cv2.imread("d:/cv2/img/6.png")
#
#     hue_image = cv2.cvtColor(image, cv2.COLOR_BGR2HSV)
#     low_range = np.array([150, 103, 100])
#     high_range = np.array([180, 255, 255])
#     th = cv2.inRange(hue_image, low_range, high_range)
#     index1 = th == 255
#
#     img = np.zeros(image.shape, np.uint8)
#     img[:, :] = (255, 255, 255)
#     img[index1] = image[index1]  # (0,0,255)
#     cv2.imshow('original_img', image)
#     cv2.imshow('extract_img', img)
#     cv2.waitKey(0)
#     cv2.destroyAllWindows()
# # xiaochunhongzhang('img_imread','img_output')


